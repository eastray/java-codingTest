package problem8;

public class MaxOfMultiply {

	private int maxOfMultiply(String str, int n) {
		int max = 0;
		while (true) {

			if (str.length() < 5)
				return max;

			String temp = str.substring(0, n);

			while (true) {
				if (temp.contains("0") || temp.contains("1"))
					str = str.substring(1, str.length());

				if (str.length() < 5)
					return max;

				temp = str.substring(0, n);

				if (!temp.contains("0"))
					break;
			}

			int sum = 1;

			for (int i = 0; i < temp.length(); i++)
				sum *= Character.getNumericValue(str.charAt(i));

			if (max < sum)
				max = sum;

			str = str.substring(1, str.length());

		}

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		MaxOfMultiply mom = new MaxOfMultiply();

		String str = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557"
				+ "66896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776"
				+ "65727333001053367881220235421809751254540594752243525849077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474"
				+ "82166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408"
				+ "07198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

		String str2 = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

		System.out.println("result1: " + mom.maxOfMultiply(str, 5));
		System.out.println();
		System.out.println("result2: " + mom.maxOfMultiply(str2, 5));

	}

}
