package problem9;

public class Pythagoras {

	private int pythagoras(int n) {
		int a = 3;
		int b = 4;
		int c = 5;
		int i = 1;
		int j = 1;
		int k = 1;

		// for (int i = 2; i < n/2; i++) {
		// while(true) {
		//
		// if (Math.pow((i * a), 2) + Math.pow((i * b), 2) == Math.pow((i * c),
		// 2)) {
		// System.out.println("Math.pow((i * a), 2): " + Math.pow((i * a), 2) +
		// ", Math.pow((i * b), 2): "
		// + Math.pow((i * b), 2) + ", Math.pow((i * c), 2): " + Math.pow((i *
		// c), 2));
		//
		// System.out.println("(i*a): " + (i * a) + ", (i*b): " + (i * b) + ",
		// (i*c): " + (i * c) + " : "
		// + ((i * a) + (i * b) + (i * c)));
		// }
		//
		// if(1008 == ((i * a) + (i * b) + (i * c)))
		// return ((i * a) * (i * b) * (i * c));
		//
		// i++;
		// }

		while (true) {

			if (Math.pow((i + a), 2) + Math.pow((j + b), 2) == Math.pow((k + c), 2)) {
				System.out.println("Math.pow((i * a), 2): " + Math.pow((i * a), 2) + ", Math.pow((j * b), 2): "
						+ Math.pow((j * b), 2) + ", Math.pow((k * c), 2): " + Math.pow((k * c), 2));
			}
			
			if(1008 < ((i + a) + (j + b) + (k + c)))
				 return ((i + a) + (k + b) + (k + c));

			if (i == j && j == k)
				i++;
			else if (i > j && j == k)
				j++;
			else if (i == j && j > k)
				k++;
		}

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Pythagoras pytha = new Pythagoras();

		System.out.println("result: " + pytha.pythagoras(1000));
	}

}
