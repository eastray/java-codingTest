package problem21;

import java.util.stream.IntStream;

public class SumOfAffinity {

	private int getAffinity(int n) {

		return 0;
	}

	private boolean isOfDivisor(int target, int n) {

		if (target == 1)
			return true;

		if (n % target == 0)
			return true;
		
		return false;
	}

	private int[] getOfDivisor(int n) {

		return IntStream.range(1, n).filter(i -> isOfDivisor(i, n)).toArray();
	}

	private long sumOfAffinity(int n) {

		int[] arr = new int[n + 1];

		//for (int i = 2; i <= n; i++) {
			System.out.println(getOfDivisor(n));
		//}

		return 0;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		SumOfAffinity soa = new SumOfAffinity();

		System.out.println(soa.sumOfAffinity(2));
	}

}
