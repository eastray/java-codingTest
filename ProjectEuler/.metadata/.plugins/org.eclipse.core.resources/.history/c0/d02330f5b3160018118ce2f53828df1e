package problem16;

import java.math.BigInteger;

public class Pow {

	private Long sumOfPow(int n) {

		// BigInteger result = BigInteger.ZERO;
		Long result = (long) 0;

		for (int j = 1; j <= n; j++) {
			String str = Integer.toString((int) Math.pow(2, j));
			
			for (int i = 0; i < str.length(); i++)
				result += Character.getNumericValue(str.charAt(i));
			// result.add(BigInteger.valueOf(Long.parseLong(str.substring(i,
			// i+1))));
		}

		System.out.println("2^" + n + ": " + str);

		return result;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Pow pow = new Pow();

		System.out.println(pow.sumOfPow(15));
		System.out.println(pow.sumOfPow(1000));
	}

}
